---
- name: Check if EPEL repository is already installed
  stat:
    path: "{{ awx_server_epel_repofile_path }}"
  register: epel_repofile

- name: Install EPEL repository
  include_tasks: epel-repo.yml
  when:
    - not epel_repofile.stat.exists

- yum_repository:
    name: "docker-ce-stable"
    description: "Docker CE Stable"
    baseurl: "https://download.docker.com/linux/centos/7/$basearch/stable"
    enabled: yes
    gpgcheck: yes
    gpgkey: https://download.docker.com/linux/centos/gpg


- name: Disable firewalld
  service:
    name: firewalld
    state: stopped
    enabled: no
  ignore_errors: yes

- name: Disable selinux
  selinux:
    state: disabled
  register: selinux_state
  notify: Reboot server

- meta: flush_handlers

- name: Install AWX system dependencies
  yum:
    name: "{{ item }}"
    state: present
    update_cache: yes
  loop:
    - device-mapper-persistent-data
    - lvm2
    - git
    - gettext
    - docker-ce
    - nodejs
    - npm
    - gcc-c++
    - bzip2
    - ansible
    - python-pip

- name: Upgrade pip
  shell: "pip install --trusted-host=pypi.python.org --trusted-host=pypi.org --trusted-host=files.pythonhosted.org -U pip"

- name: remove cloud-init
  yum:
    name: cloud-init
    state: absent

- name: remove python-requests
  yum:
    name: python-requests
    state: absent

- name: Install AWX Python dependencies
  shell: "pip install --trusted-host=pypi.python.org --trusted-host=pypi.org --trusted-host=files.pythonhosted.org -U docker-compose"

- name: Start and enable Docker service
  service:
    name: docker
    state: started
    enabled: yes

- name: Clone AWX repository (v{{ awx_server_version }})
  git:
    repo: "https://github.com/ansible/awx.git"
    dest: "{{ awx_server_src_dir }}"
    version: "{{ awx_server_version }}"
    force: yes

- lineinfile:
    path: "{{ awx_server_src_dir }}/installer/inventory"
    regex: >-
      {{ item.key }}=.*
    line: >-
      {{ item.key }}={{ item.value }}
  loop: "{{ awx_server_installer_variables|dict2items }}"

- file:
    state: directory
    path: "{{ awx_server_postgres_data_dir }}"
    
- name: Start AWX installer (long running)
  shell: >-
    ansible-playbook -i inventory install.yml
  register: sh_awx_installer
  changed_when: >-
    not (
      sh_awx_installer.stdout
      |regex_search(awx_server_installer_unchanged_marker, multiline=True)
    )
  args:
    chdir: "{{ awx_server_src_dir }}/installer"
